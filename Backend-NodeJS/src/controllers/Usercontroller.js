const session = require("express-session");
const { format } = require("date-fns");
const { vi } = require("date-fns/locale");
// const { handle } = require("express/lib/application");
const {
  handelUserLogin,
  getAllUsers,
  CreateUser,
  DeleteUser,
  EditUser,
  Booking,
  GetAppointment,
  AbortAppointment,
  getUserInfo,
} = require("../services/UserService");

const handleLogin = async (req, res) => {
  const email = req.body.email;
  const password = req.body.password;

  if (!email || !password) {
    return res.status(400).json({
      errCode: 1,
      message: "Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng",
    });
  }
  const userData = await handelUserLogin(email, password);

  if (userData.errCode === 0) {
    // ƒêƒÉng nh·∫≠p th√†nh c√¥ng
    return res.status(200).json({
      errCode: 0,
      message: userData.errMessage,
      user: userData.user,
    });
  } else {
    // Sai th√¥ng tin ƒëƒÉng nh·∫≠p
    return res.status(400).json({
      errCode: userData.errCode,
      message: userData.errMessage,
    });
  }
};

const handleGetAll = async (req, res) => {
  const userID = req.query.id; //truyen vao all or id

  console.log("Received ID:", userID);
  const Users = await getAllUsers(userID);
  return res.status(200).json({
    errCode: 0,
    errMessage: "OK",
    Users,
  });
};

const handleCreate = async (req, res) => {
  try {
    const message = await CreateUser(req.body);
    console.log(req.body);
    return res.status(200).json(message); // G·ªçi res.json m·ªôt l·∫ßn khi kh√¥ng c√≥ l·ªói
  } catch (error) {
    // Ki·ªÉm tra xem l·ªói c√≥ ph·∫£i do email ƒë√£ t·ªìn t·∫°i kh√¥ng
    if (error === "Email ƒë√£ t·ªìn t·∫°i.") {
      return res.status(400).json({
        errCode: 1,
        message: "Email ƒë√£ t·ªìn t·∫°i. Vui l√≤ng s·ª≠ d·ª•ng email kh√°c.",
      });
    } else {
      // N·∫øu c√≥ l·ªói kh√°c, tr·∫£ v·ªÅ l·ªói chung
      return res.status(500).json({
        errCode: 1,
        message: error || "C√≥ l·ªói x·∫£y ra",
      });
    }
  }
};

const handleDelete = async (req, res) => {
  if (!req.body.id) {
    return res.status(200).json({
      errCode: 1,
      errMessage: "Khong thay id",
    });
  }
  try {
    const id = req.body.id;
    console.log(id);
    const result = await DeleteUser(id);
    if (result) {
      return res.status(200).json({
        errCode: 0,
        errMessage: "Xoa thanh cong",
      });
    } else {
      return res.status(400).json({
        errCode: 0,
        errMessage: "Khong tim thay id cung cap",
      });
    }
  } catch (e) {
    return res.status(500).json({
      errCode: 3,
      errMessage: "Internal server error",
      error: e.message,
    });
  }
};

const handleEdit = async (req, res) => {
  const data = req.body;
  const message = await EditUser(data);
  return res.status(200).json(message);
};

const handleBooking = async (req, res) => {
  try {
    const message = await Booking(req.body);
    console.log("D·ªØ li·ªáu y√™u c·∫ßu:", req.body);
    return res.status(200).json(message);
  } catch (error) {
    console.error("L·ªói khi x·ª≠ l√Ω ƒë·∫∑t l·ªãch:", error);
    return res.status(500).json({
      errCode: 1,
      errMessage: "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i",
    });
  }
};

const handleGetAppointment = async (req, res) => {
  try {
    const userID = req.query.userID;
    console.log("UserID nh·∫≠n ƒë∆∞·ª£c:", userID);

    if (!userID) {
      return res.status(400).json({
        errCode: 3,
        errMessage: "Thi·∫øu th√¥ng tin b·∫Øt bu·ªôc (userID)",
      });
    }

    const result = await GetAppointment(userID);
    console.log("D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ GetAppointment:", result); // üõë In ra ƒë·ªÉ ki·ªÉm tra

    if (!result || result.length === 0) {
      return res.status(200).json({
        errCode: 0,
        errMessage: "Kh√¥ng c√≥ l·ªãch h·∫πn",
        data: [],
      });
    }

    return res.status(200).json({
      errCode: 0,
      errMessage: "L·∫•y l·ªãch h·∫πn th√†nh c√¥ng",
      result,
    });
  } catch (error) {
    console.error("L·ªói trong handleGetAppointment:", error);
    return res.status(500).json({
      errCode: 1,
      errMessage: "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i",
    });
  }
};

const handleAbortAppointment = async (req, res) => {
  try {
    const id = req.query.id;
    console.log(id);
    const response = await AbortAppointment(id);
    return res.status(200).json({
      errCode: response.errCode,
      errMessage: response.errMessage,
      response,
    });
  } catch (error) {
    console.error("L·ªói trong handleGetAppointment:", error);
    return res.status(500).json({
      errCode: 1,
      errMessage: "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i",
    });
  }
};

const handleGetUserInfo = async (req, res) => {
  try {
    const user = await getUserInfo(req.query.id);
    return res.status(200).json({
      errCode: 0,
      errMessage: "Lay du lieu thanh cong",
      user,
    });
  } catch (error) {
    console.log(error);
    return res.status(500).json({
      error: 1,
      errMessage: "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i",
    });
  }
};

module.exports = {
  handleLogin,
  handleGetAll,
  handleCreate,
  handleDelete,
  handleEdit,
  handleBooking,
  handleGetAppointment,
  handleAbortAppointment,
  handleGetUserInfo,
};
